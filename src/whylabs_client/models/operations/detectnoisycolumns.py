"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import analyzersegmentcolumnsdiagnosticrequest as components_analyzersegmentcolumnsdiagnosticrequest
from ...models.components import analyzersegmentcolumnsdiagnosticresponse as components_analyzersegmentcolumnsdiagnosticresponse
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class DetectNoisyColumnsRequest:
    org_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org_id', 'style': 'simple', 'explode': False }})
    analyzer_segment_columns_diagnostic_request: components_analyzersegmentcolumnsdiagnosticrequest.AnalyzerSegmentColumnsDiagnosticRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class DetectNoisyColumnsResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    analyzer_segment_columns_diagnostic_response: Optional[components_analyzersegmentcolumnsdiagnosticresponse.AnalyzerSegmentColumnsDiagnosticResponse] = dataclasses.field(default=None)
    r"""DetectNoisyColumns 200 response"""
    

