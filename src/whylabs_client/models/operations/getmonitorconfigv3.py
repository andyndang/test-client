"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class GetMonitorConfigV3Request:
    UNSET='__SPEAKEASY_UNSET__'
    org_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org_id', 'style': 'simple', 'explode': False }})
    dataset_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'dataset_id', 'style': 'simple', 'explode': False }})
    include_entity_schema: Optional[bool] = dataclasses.field(default=UNSET, metadata={'query_param': { 'field_name': 'include_entity_schema', 'style': 'form', 'explode': True }})
    include_entity_weights: Optional[bool] = dataclasses.field(default=UNSET, metadata={'query_param': { 'field_name': 'include_entity_weights', 'style': 'form', 'explode': True }})
    



@dataclasses.dataclass
class GetMonitorConfigV3Response:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    string: Optional[str] = dataclasses.field(default=None)
    r"""GetMonitorConfigV3 200 response"""
    

