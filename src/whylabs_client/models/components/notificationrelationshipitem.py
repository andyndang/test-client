"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional
from whylabs_client import utils

class Type(str, Enum):
    MONITOR = 'MONITOR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NotificationRelationshipItem:
    UNSET='__SPEAKEASY_UNSET__'
    dataset_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datasetId'), 'exclude': lambda f: f is NotificationRelationshipItem.UNSET }})
    item_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemId'), 'exclude': lambda f: f is NotificationRelationshipItem.UNSET }})
    item_display_name: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemDisplayName'), 'exclude': lambda f: f is NotificationRelationshipItem.UNSET }})
    type: Optional[Type] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is NotificationRelationshipItem.UNSET }})
    

